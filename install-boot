#!/bin/bash

# =================================================================
# Skrip Bangun Ulang Hokage-BOT v5.0
# Menghapus total instalasi lama dan membangun ulang dari nol.
# =================================================================

# --- Konfigurasi ---
REPO_URL="https://github.com/hokagelegend9999/Telegram-bot.git"
APP_DIR="/opt/hokage-bot"
SERVICE_FILE="/etc/systemd/system/hokage-bot.service"
SUDOERS_FILE="/etc/sudoers.d/hokage-bot-sudo"

# --- Warna ---
GREEN='\033[0;32m'; YELLOW='\033[1;33m'; RED='\033[0;31m'; NC='\033[0m'

# --- FUNGSI ---

showHeader() {
    clear
    echo -e "${GREEN}========================================================${NC}"
    echo -e "${GREEN}==         Skrip Bangun Ulang Hokage-BOT v5.0         ==${NC}"
    echo -e "${GREEN}========================================================${NC}"
    echo
}

# --- FASE 1: PENGHAPUSAN TOTAL ---
run_cleanup() {
    echo -e "${YELLOW}--- FASE 1: MENGHAPUS SEMUA KOMPONEN LAMA ---${NC}"
    systemctl stop hokage-bot.service > /dev/null 2>&1
    systemctl disable hokage-bot.service > /dev/null 2>&1
    echo "> Menghapus direktori dan file..."
    rm -rf "$APP_DIR" "$SERVICE_FILE" "$SUDOERS_FILE"
    systemctl daemon-reload
    echo -e "${GREEN}âœ“ Pembersihan selesai.${NC}"
    echo
}

# --- FASE 2: PEMBANGUNAN KEMBALI ---
run_rebuild() {
    echo -e "${YELLOW}--- FASE 2: MEMBANGUN KEMBALI DARI NOL ---${NC}"
    
    # 1. Meminta Kredensial
    read -p "Masukkan Token Bot Telegram Anda: " BOT_TOKEN
    read -p "Masukkan ID Telegram Admin Anda: " ADMIN_ID
    if [ -z "$BOT_TOKEN" ] || [ -z "$ADMIN_ID" ]; then echo -e "${RED}Error: Token/ID kosong.${NC}"; exit 1; fi
    echo

    # 2. Instal Dependensi
    echo "> Menginstal dependensi sistem..."
    apt-get update > /dev/null 2>&1
    apt-get install -y git python3-venv > /dev/null 2>&1

    # 3. Clone Repositori
    echo "> Mengunduh repositori dari GitHub..."
    mkdir -p "$APP_DIR"
    git clone --depth 1 "$REPO_URL" "$APP_DIR"
    if [ $? -ne 0 ]; then echo -e "${RED}GAGAL: Tidak bisa mengunduh repositori.${NC}"; exit 1; fi
    chmod +x ${APP_DIR}/*.sh

    # 4. Timpa File dengan Versi yang Sudah Diperbaiki
    echo "> Menerapkan perbaikan pada file bot..."
    
    # Perbaikan untuk main.py (menambahkan init_db)
    cat <<'EOF' > ${APP_DIR}/main.py
import logging
from telegram.ext import Application, CommandHandler, CallbackQueryHandler
import config, handlers, keyboards, database

logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

def main() -> None:
    database.init_db()
    application = Application.builder().token(config.BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", handlers.start))
    application.add_handler(CallbackQueryHandler(handlers.button_handler))
    logging.info("Bot siap dan mulai berjalan...")
    application.run_polling()

if __name__ == "__main__":
    main()
EOF

    # Perbaikan untuk handlers.py (menyederhanakan 'start' dan menambahkan 'button_handler')
    cat <<'EOF' > ${APP_DIR}/handlers.py
from telegram import Update
from telegram.ext import ContextTypes
import keyboards

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Menampilkan menu utama dengan tombol inline untuk semua user."""
    await update.message.reply_text(
        text="Selamat datang! Silakan pilih menu di bawah ini:",
        reply_markup=keyboards.get_main_menu_keyboard()
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """Menangani semua input dari Inline Keyboard."""
    query = update.callback_query
    await query.answer()
    command = query.data
    await query.edit_message_text(text=f"Anda memilih menu: {command}")
EOF

    # 5. Buat file config.py baru
    echo "> Membuat file konfigurasi..."
    cat <<EOF > ${APP_DIR}/config.py
BOT_TOKEN = "${BOT_TOKEN}"
ADMIN_TELEGRAM_ID = ${ADMIN_ID}
SERVER_IP = "$(hostname -I | awk '{print $1}')"
SERVER_HOST = "ganti_dengan_domain_anda.com"
EOF

    # 6. Finalisasi Instalasi
    echo "> Menyelesaikan instalasi akhir..."
    python3 -m venv "${APP_DIR}/venv"
    source "${APP_DIR}/venv/bin/activate"
    pip install python-telegram-bot > /dev/null 2>&1
    deactivate

    cat <<EOF > ${SERVICE_FILE}
[Unit]
Description=Hokage-BOT Rebuilt Service
After=network.target
[Service]
User=root
WorkingDirectory=${APP_DIR}
ExecStart=${APP_DIR}/venv/bin/python3 main.py
Restart=always
[Install]
WantedBy=multi-user.target
EOF
    
    echo "root ALL=(ALL) NOPASSWD: ${APP_DIR}/*.sh" > $SUDOERS_FILE
    chmod 440 $SUDOERS_FILE
    
    systemctl daemon-reload
    systemctl enable hokage-bot.service > /dev/null 2>&1
    systemctl start hokage-bot.service
}

# --- EKSEKUSI UTAMA ---
checkRoot
showHeader
run_cleanup
run_rebuild

echo
echo -e "${GREEN}========================================================${NC}"
echo -e "${GREEN}==         PEMBANGUNAN ULANG BERHASIL SELESAI         ==${NC}"
echo -e "${GREEN}========================================================${NC}"
echo
echo "Bot Anda kini berjalan dengan instalasi yang bersih dan kode yang sudah diperbaiki."
echo "Periksa status: ${YELLOW}systemctl status hokage-bot.service${NC}"
